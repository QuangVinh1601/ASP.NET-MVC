@inject WebAppMVC_1.Models.AppDbContext dbContext
@using Microsoft.EntityFrameworkCore
@using System.Data
@{
    ViewData["Title"] = "Thông tin về DataBase";
    var connection = dbContext.Database.GetDbConnection();
    var dbname = connection.Database;
    var can_Connect = dbContext.Database.CanConnect();


}
<partial name="_Alert"/>

<h1>Thông tin về cơ sở dữ liệu</h1>
<p>-Database: @dbname</p>
<p>-Source: @connection.DataSource</p>
<p>-State: @connection.State</p>
<hr />
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}
@foreach(var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}

@if (!can_Connect)
{
    <p class="alert alert-danger">Không có khả năng kết nối đến Database</p>
}
@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button class="btn btn-success" asp-action="Migration">Tạo Database (Cập nhật Migration)</button>
    </form>
}
@if (can_Connect)
{
    <h2>Các Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach( DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }

     </ul>
     <a class="btn btn-danger" asp-action="DeleteDb">Xóa Database : @dbname</a>
     <a class="btn btn-success" asp-action="SeedData">Seed Data</a>
}
